import Project.ConnectionProvider;
import javax.swing.JInternalFrame;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 111
 */
public class EditIssueFrame extends javax.swing.JFrame {

    MainWindow main;
    String issue;

    public EditIssueFrame() {
        initComponents();
    }

    public EditIssueFrame(MainWindow pointer, String copyID, String studentID, String student_name, String book_name, String date1, String date2) {
        initComponents();
        setSize(610, 370);
        setLocationRelativeTo(null);
        CopyCodeField.setText(copyID);
        BookNameField.setText(book_name);
        StudentIdField.setText(studentID);
        StudentNameField.setText(student_name);
        try
        {
            Date d = new SimpleDateFormat("yyyy-MM-dd").parse(date1);
            Date1.setDate(d);
            d = new SimpleDateFormat("yyyy-MM-dd").parse(date2);
            Date2.setDate(d);
        }
        catch (Exception e)
        {
            System.err.println(e);
        }
        this.main = pointer;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select ISSUE_issue_code from mydb.issue_copy where COPY_copy_code = "+copyID+"");
            if (rs.next())
            {
                issue = rs.getString(1);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Что-то пошло не так!");
                setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BookNameField = new javax.swing.JTextField();
        CopyCodeLabel = new javax.swing.JLabel();
        ISBNLabel = new javax.swing.JLabel();
        BookNameLabel = new javax.swing.JLabel();
        CopyCodeField = new javax.swing.JTextField();
        StudentNameField = new javax.swing.JTextField();
        CopyCodeLabel1 = new javax.swing.JLabel();
        StudentIdField = new javax.swing.JTextField();
        Date1 = new com.toedter.calendar.JDateChooser();
        Date2 = new com.toedter.calendar.JDateChooser();
        BookNameLabel1 = new javax.swing.JLabel();
        BookNameLabel2 = new javax.swing.JLabel();
        CloseButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        EnterButton = new javax.swing.JButton();
        SearchCopy = new javax.swing.JButton();
        SearchStudent = new javax.swing.JButton();

        setTitle("Редактор выдачи");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("mephi_circle.png")).getImage());
        setResizable(false);

        BookNameField.setEditable(false);

        CopyCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CopyCodeLabel.setText("Код копии:");

        ISBNLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ISBNLabel.setText("Имя студента:");

        BookNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookNameLabel.setText("Название книги:");

        StudentNameField.setEditable(false);

        CopyCodeLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CopyCodeLabel1.setText("Код читательского билета:");

        BookNameLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookNameLabel1.setText("Дата выдачи:");

        BookNameLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookNameLabel2.setText("Дата планируемого возврата");

        CloseButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CloseButton.setText("Отмена");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DeleteButton.setText("<html><center>Удалить<br />выдачу</center></html>");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        EnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EnterButton.setText("<html><center>Редактировать<br />выдачу</center></html>");
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        SearchCopy.setText("Найти..");
        SearchCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCopyActionPerformed(evt);
            }
        });

        SearchStudent.setText("Найти..");
        SearchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BookNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CopyCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CopyCodeLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StudentIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ISBNLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StudentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BookNameLabel1)
                                    .addComponent(BookNameLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Date2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Date1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchCopy)
                            .addComponent(SearchStudent))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CopyCodeLabel)
                    .addComponent(SearchCopy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookNameLabel)
                    .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CopyCodeLabel1)
                    .addComponent(StudentIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchStudent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISBNLabel)
                    .addComponent(StudentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookNameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookNameLabel2))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed

        String copyID = CopyCodeField.getText();
        String issue;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            Statement stmt1 = con.createStatement();
            ResultSet rs = stmt.executeQuery("select ISSUE_issue_code from mydb.issue_copy where COPY_copy_code = "+copyID+"");
            if (rs.next())
            {
                issue = rs.getString(1);
                stmt1.executeUpdate("delete from mydb.issue_copy where COPY_copy_code = "+copyID+"");
                stmt1.executeUpdate("delete from mydb.issue where issue_code = "+issue+"");
                JOptionPane.showMessageDialog(null, "Выдача успешно удалена!");
                main.RefreshIssue();
                setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Данный экземпляр не был выдан!");
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Введены некорректные данные об экземпляре!");
            setVisible(false);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        String copyID = CopyCodeField.getText();
        String student = StudentIdField.getText();
        Date date1 = Date1.getDate();
        Date date2 = Date2.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String d1 = dateFormat.format(date1);
        String d2 = dateFormat.format(date2);
        
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            Statement stmt1 = con.createStatement();
            Statement stmt2 = con.createStatement();
            Statement stmt3 = con.createStatement();
            Statement stmt4 = con.createStatement();
            ResultSet rs = stmt.executeQuery("select copy_code from mydb.copy where copy_code = '"+copyID+"'");
            ResultSet rs1 = stmt1.executeQuery("select library_card_no from mydb.student where library_card_no = '"+student+"'");
            ResultSet rs2 = stmt2.executeQuery("select COPY_copy_code from mydb.issue_copy where COPY_copy_code = '"+copyID+"'");
            if (rs.next())
            {
                if (rs1.next())
                {
                    if (rs2.next())
                    {
                        JOptionPane.showMessageDialog(null, "Данный экземпляр уже выдан!");
                    }
                    else
                    {
                        stmt3.executeUpdate("update mydb.issue_copy set COPY_copy_code = "+copyID+" where ISSUE_issue_code = "+issue+"");
                        stmt4.executeUpdate("update mydb.issue set STUDENT_library_card_no = "+student+", issue_date = '"+d1+"', return_date = '"+d2+"' where issue_code = "+issue+"");
                        JOptionPane.showMessageDialog(null, "Выдача успешно обновлена!");
                        main.RefreshIssue();
                        setVisible(false);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Такого студента не существует!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такого экземпляра не существует!");
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Что-то пошло не так!");
            setVisible(false);
        }
    }//GEN-LAST:event_EnterButtonActionPerformed

    private void SearchCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCopyActionPerformed
        String copyID = CopyCodeField.getText();

        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select book_name from mydb.copy join mydb.book on book.ISBN = copy.BOOK_ISBN where copy_code = "+copyID+"");
            if (rs.next())
            {
                BookNameField.setText(rs.getString(1));
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такого экземпляра не существует!");
            }
        }
        catch (Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_SearchCopyActionPerformed

    private void SearchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchStudentActionPerformed
        String studentID = StudentIdField.getText();

        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select student_name from mydb.student where library_card_no = "+studentID+"");
            if (rs.next())
            {
                StudentNameField.setText(rs.getString(1));
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такого студента не существует!");
            }
        }
        catch (Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_SearchStudentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditIssueFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditIssueFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookNameField;
    private javax.swing.JLabel BookNameLabel;
    private javax.swing.JLabel BookNameLabel1;
    private javax.swing.JLabel BookNameLabel2;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTextField CopyCodeField;
    private javax.swing.JLabel CopyCodeLabel;
    private javax.swing.JLabel CopyCodeLabel1;
    private com.toedter.calendar.JDateChooser Date1;
    private com.toedter.calendar.JDateChooser Date2;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EnterButton;
    private javax.swing.JLabel ISBNLabel;
    private javax.swing.JButton SearchCopy;
    private javax.swing.JButton SearchStudent;
    private javax.swing.JTextField StudentIdField;
    private javax.swing.JTextField StudentNameField;
    // End of variables declaration//GEN-END:variables
}
