import Project.ConnectionProvider;
import javax.swing.JInternalFrame;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 111
 */
public class EditBookFrame extends javax.swing.JFrame {

    MainWindow main;
    
    public EditBookFrame() {
        initComponents();
    }
    
    public EditBookFrame(MainWindow pointer, String copy, String ISBN, String name, String year) {
        initComponents();
        setSize(610, 330);
        setLocationRelativeTo(null);
        CopyCodeField.setText(copy);
        ISBNField.setText(ISBN);
        BookNameField.setText(name);
        PublishYearField.setText(year);
        this.main = pointer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        YearLabel = new javax.swing.JLabel();
        CopyCodeField = new javax.swing.JTextField();
        ISBNField = new javax.swing.JTextField();
        BookNameField = new javax.swing.JTextField();
        PublishYearField = new javax.swing.JTextField();
        CopyCodeLabel = new javax.swing.JLabel();
        ISBNLabel = new javax.swing.JLabel();
        BookNameLabel = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        EnterButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();

        setTitle("Редактор экземпляра");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("mephi_circle.png")).getImage());
        setResizable(false);

        YearLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        YearLabel.setText("Год издания:");

        CopyCodeField.setEditable(false);

        BookNameField.setEditable(false);

        PublishYearField.setEditable(false);

        CopyCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CopyCodeLabel.setText("Код копии:");

        ISBNLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ISBNLabel.setText("ISBN:");

        BookNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookNameLabel.setText("Название книги:");

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DeleteButton.setText("<html><center>Удалить<br />книгу</center></html>");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        EnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EnterButton.setText("<html><center>Редактировать<br />книгу</center></html>");
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        CloseButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CloseButton.setText("Отмена");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        SearchButton.setText("Найти...");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(CopyCodeLabel)
                                .addComponent(ISBNLabel)
                                .addComponent(BookNameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SearchButton))
                                .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(YearLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PublishYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(79, 79, 79)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CopyCodeLabel)
                    .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISBNLabel)
                    .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookNameLabel)
                    .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearLabel)
                    .addComponent(PublishYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        
        String copyID = CopyCodeField.getText();
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            Statement stmt1 = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.issue_copy where COPY_copy_code = "+copyID+"");
            if (rs.next())
            {
                JOptionPane.showMessageDialog(null, "Нельзя удалить выданный экземпляр!");
            }
            else
            {
                stmt1.executeUpdate("delete from mydb.copy where copy_code = "+copyID+"");
                JOptionPane.showMessageDialog(null, "Экземпляр успешно удалён!");
                main.RefreshCopy();
                setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Введены некорректные данные об экземпляре!");
            setVisible(false);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        String copyID = CopyCodeField.getText();
        String ISBN = ISBNField.getText();
        int q = 0;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            Statement stmt1 = con.createStatement();
            Statement stmt2 = con.createStatement();
            ResultSet rs = stmt1.executeQuery("select quantity from mydb.book where ISBN = '"+ISBN+"'");
            if (rs.next())
            {
                q = rs.getInt(1);
                ++q;
                stmt.executeUpdate("update mydb.copy set BOOK_ISBN = '"+ISBN+"' where copy_code = "+copyID+"");
                stmt2.executeUpdate("update mydb.book set quantity = "+q+" where ISBN = "+ISBN+"");
                JOptionPane.showMessageDialog(null, "Экземпляр успешно отредактирован!");
                main.RefreshCopy();
                setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такой книги не существует!");
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Что-то пошло не так!");
            setVisible(false);
        }
    }//GEN-LAST:event_EnterButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        
        String ISBN = ISBNField.getText();
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.book where ISBN = '"+ISBN+"'");
            if (rs.next())
            {
                BookNameField.setText(rs.getString("book_name"));
                PublishYearField.setText(rs.getString("publish_year"));
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такой книги не существует!");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Что-то пошло не так!");
            setVisible(false);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditBookFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookNameField;
    private javax.swing.JLabel BookNameLabel;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTextField CopyCodeField;
    private javax.swing.JLabel CopyCodeLabel;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EnterButton;
    private javax.swing.JTextField ISBNField;
    private javax.swing.JLabel ISBNLabel;
    private javax.swing.JTextField PublishYearField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel YearLabel;
    // End of variables declaration//GEN-END:variables
}
