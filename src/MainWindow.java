import Project.ConnectionProvider;
import javax.swing.JInternalFrame;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 111
 */
public class MainWindow extends javax.swing.JFrame {

    String isAdmin = "0";
    
    public MainWindow() {
        initComponents();
        setSize(1280, 720);
        setLocationRelativeTo(null);
        Pane.setVisible(false);
        jTable1.setModel(new DefaultTableModel());
    }
    
    public MainWindow(String admin) {
        initComponents();
        setSize(1280, 720);
        setLocationRelativeTo(null);
        Pane.setVisible(false);
        jTable1.setModel(new DefaultTableModel());
        isAdmin = admin;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddStudentButton = new javax.swing.JButton();
        AddBookButton = new javax.swing.JButton();
        StatisticsButton = new javax.swing.JButton();
        IssueBookButton = new javax.swing.JButton();
        ReturnBookButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        Pane = new javax.swing.JTabbedPane();
        AddStudentPanel = new javax.swing.JPanel();
        PhoneNumberField = new javax.swing.JTextField();
        EnterButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();
        LibrariCardLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        LibraryCardField = new javax.swing.JTextField();
        NameField = new javax.swing.JTextField();
        AddressField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        AddBookPanel = new javax.swing.JPanel();
        AddBookCancelButton = new javax.swing.JButton();
        AddBookEnterButton = new javax.swing.JButton();
        CopyCodeLabel = new javax.swing.JLabel();
        ISBNLabel = new javax.swing.JLabel();
        BookNameLabel = new javax.swing.JLabel();
        BBKLabel = new javax.swing.JLabel();
        YearLabel = new javax.swing.JLabel();
        CopyCodeField = new javax.swing.JTextField();
        ISBNField = new javax.swing.JTextField();
        BookNameField = new javax.swing.JTextField();
        BBKField = new javax.swing.JTextField();
        PublishYearField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        SearchISBN = new javax.swing.JButton();
        DeleteCheckBox = new javax.swing.JCheckBox();
        StatisticsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        IssueToggleButton = new javax.swing.JToggleButton();
        CopyToggleButton = new javax.swing.JToggleButton();
        StudentToggleButton = new javax.swing.JToggleButton();
        BookToggleButton = new javax.swing.JToggleButton();
        EmployeeButton = new javax.swing.JButton();
        EmployeeToggleButton = new javax.swing.JToggleButton();
        AdminLabel = new javax.swing.JLabel();
        IssuePanel = new javax.swing.JPanel();
        IssueEnterButton = new javax.swing.JButton();
        IssueCancelButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        IssueCopyCodeField = new javax.swing.JTextField();
        IssueLibraryCardField = new javax.swing.JTextField();
        IssueDateChooser = new com.toedter.calendar.JDateChooser();
        ReturnDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        ReturnPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ReturnCopyCodeField = new javax.swing.JTextField();
        ReturnLibraryCardField = new javax.swing.JTextField();
        ReturnIssueDateField = new javax.swing.JTextField();
        ReturnReturnDateField = new javax.swing.JTextField();
        ReturnCancelButton = new javax.swing.JButton();
        ReturnEnterButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ReturnStudentNameField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Библиотека ИАТЭ НИЯУ МИФИ");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("mephi_circle.png")).getImage());
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AddStudentButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AddStudentButton.setText("<html><center>Добавить<br /> студента</center></html>");
        AddStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStudentButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AddStudentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 120, 80));

        AddBookButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AddBookButton.setText("<html><center>Добавить<br />книгу</center></html>");
        AddBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AddBookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 120, 80));

        StatisticsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        StatisticsButton.setText("Статистика");
        StatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatisticsButtonActionPerformed(evt);
            }
        });
        getContentPane().add(StatisticsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 120, 80));

        IssueBookButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        IssueBookButton.setText("<html><center>Выдача<br />книги</center></html>");
        IssueBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueBookButtonActionPerformed(evt);
            }
        });
        getContentPane().add(IssueBookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 120, 80));

        ReturnBookButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ReturnBookButton.setText("<html><center>Возврат<br />книги</center></html>");
        ReturnBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBookButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ReturnBookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 50, 120, 80));

        LogoutButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        LogoutButton.setText("Выход");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LogoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 50, 120, 80));

        Pane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        EnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EnterButton.setText("Добавить студента");
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        CloseButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CloseButton.setText("Отмена");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        LibrariCardLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LibrariCardLabel.setText("Индивидуальный номер:");

        NameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NameLabel.setText("Ф.И.О.:");

        AddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AddressLabel.setText("Адрес:");

        PhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PhoneLabel.setText("Номер телефона:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Добавить студента:");

        javax.swing.GroupLayout AddStudentPanelLayout = new javax.swing.GroupLayout(AddStudentPanel);
        AddStudentPanel.setLayout(AddStudentPanelLayout);
        AddStudentPanelLayout.setHorizontalGroup(
            AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddStudentPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddStudentPanelLayout.createSequentialGroup()
                        .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AddStudentPanelLayout.createSequentialGroup()
                                    .addGap(219, 219, 219)
                                    .addComponent(LibrariCardLabel))
                                .addGroup(AddStudentPanelLayout.createSequentialGroup()
                                    .addGap(340, 340, 340)
                                    .addComponent(AddressLabel)))
                            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                                .addGap(268, 268, 268)
                                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(PhoneLabel)
                                    .addComponent(NameLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LibraryCardField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddStudentPanelLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(407, 407, 407))
        );
        AddStudentPanelLayout.setVerticalGroup(
            AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LibrariCardLabel)
                    .addComponent(LibraryCardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddressLabel)
                    .addComponent(AddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneLabel)
                    .addComponent(PhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addGroup(AddStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );

        Pane.addTab("tab1", AddStudentPanel);

        AddBookCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddBookCancelButton.setText("Отмена");
        AddBookCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookCancelButtonActionPerformed(evt);
            }
        });

        AddBookEnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddBookEnterButton.setText("Добавить книгу");
        AddBookEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookEnterButtonActionPerformed(evt);
            }
        });

        CopyCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CopyCodeLabel.setText("Код копии:");

        ISBNLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ISBNLabel.setText("ISBN:");

        BookNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookNameLabel.setText("Название книги:");

        BBKLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BBKLabel.setText("ББК:");

        YearLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        YearLabel.setText("Год издания:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Добавить книгу:");

        SearchISBN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SearchISBN.setText("Найти...");
        SearchISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchISBNActionPerformed(evt);
            }
        });

        DeleteCheckBox.setText("не очищать поля после добавления экземпляра");

        javax.swing.GroupLayout AddBookPanelLayout = new javax.swing.GroupLayout(AddBookPanel);
        AddBookPanel.setLayout(AddBookPanelLayout);
        AddBookPanelLayout.setHorizontalGroup(
            AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBookPanelLayout.createSequentialGroup()
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddBookPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(AddBookEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195)
                        .addComponent(AddBookCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddBookPanelLayout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CopyCodeLabel)
                            .addComponent(ISBNLabel)
                            .addComponent(BookNameLabel)
                            .addComponent(BBKLabel)
                            .addComponent(YearLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BBKField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PublishYearField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddBookPanelLayout.createSequentialGroup()
                                .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchISBN))
                            .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteCheckBox))))
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddBookPanelLayout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(414, 414, 414))
        );
        AddBookPanelLayout.setVerticalGroup(
            AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBookPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CopyCodeLabel)
                    .addComponent(CopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISBNLabel)
                    .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchISBN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookNameLabel)
                    .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BBKLabel)
                    .addComponent(BBKField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearLabel)
                    .addComponent(PublishYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteCheckBox)
                .addGap(25, 25, 25)
                .addGroup(AddBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddBookEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddBookCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Pane.addTab("tab2", AddBookPanel);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        IssueToggleButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        IssueToggleButton.setText("<html><center>Выдачи<br />книг</center></html>");
        IssueToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueToggleButtonActionPerformed(evt);
            }
        });

        CopyToggleButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CopyToggleButton.setText("Копии");
        CopyToggleButton.setActionCommand("Копии");
        CopyToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyToggleButtonActionPerformed(evt);
            }
        });

        StudentToggleButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StudentToggleButton.setText("Студенты");
        StudentToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentToggleButtonActionPerformed(evt);
            }
        });

        BookToggleButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookToggleButton.setText("Книги");
        BookToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookToggleButtonActionPerformed(evt);
            }
        });

        EmployeeButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmployeeButton.setText("<html><center>Добавить<br />сотрудника</center></html>");
        EmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeButtonActionPerformed(evt);
            }
        });

        EmployeeToggleButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EmployeeToggleButton.setText("Сотрудники");
        EmployeeToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeToggleButtonActionPerformed(evt);
            }
        });

        AdminLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdminLabel.setText("<html><center>Вы не обладаете<br />правами администратора.</center></html>");

        javax.swing.GroupLayout StatisticsPanelLayout = new javax.swing.GroupLayout(StatisticsPanel);
        StatisticsPanel.setLayout(StatisticsPanelLayout);
        StatisticsPanelLayout.setHorizontalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPanelLayout.createSequentialGroup()
                .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(StudentToggleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(IssueToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CopyToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BookToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmployeeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(AdminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                .addContainerGap())
        );
        StatisticsPanelLayout.setVerticalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatisticsPanelLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(StatisticsPanelLayout.createSequentialGroup()
                        .addComponent(StudentToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BookToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CopyToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(IssueToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AdminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmployeeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );

        Pane.addTab("tab3", StatisticsPanel);

        IssueEnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IssueEnterButton.setText("<html><center>Подтвердить<br /> выдачу</center></html>");
        IssueEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueEnterButtonActionPerformed(evt);
            }
        });

        IssueCancelButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IssueCancelButton1.setText("Отмена");
        IssueCancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueCancelButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Код копии:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Номер читательского билета:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Дата выдачи:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Планируемая дата возврата:");

        IssueDateChooser.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        ReturnDateChooser.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Выдать книгу:");

        javax.swing.GroupLayout IssuePanelLayout = new javax.swing.GroupLayout(IssuePanel);
        IssuePanel.setLayout(IssuePanelLayout);
        IssuePanelLayout.setHorizontalGroup(
            IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssuePanelLayout.createSequentialGroup()
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IssuePanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(IssueEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195)
                        .addComponent(IssueCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IssuePanelLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IssueCopyCodeField)
                            .addComponent(IssueLibraryCardField)
                            .addComponent(IssueDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ReturnDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(200, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IssuePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(434, 434, 434))
        );
        IssuePanelLayout.setVerticalGroup(
            IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IssuePanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IssueCopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(IssueLibraryCardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(IssueDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(ReturnDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addGroup(IssuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IssueCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(226, 226, 226))
        );

        Pane.addTab("tab4", IssuePanel);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Код копии:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Номер читательского билета:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Дата выдачи:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Планируемая дата возврата:");

        ReturnCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReturnCancelButton.setText("Отмена");
        ReturnCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnCancelButtonActionPerformed(evt);
            }
        });

        ReturnEnterButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReturnEnterButton.setText("<html><center>Подтвердить<br /> возврат</center></html>");
        ReturnEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnEnterButtonActionPerformed(evt);
            }
        });

        SearchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SearchButton.setText("Поиск...");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Ф.И.О.");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Вернуть книгу:");

        javax.swing.GroupLayout ReturnPanelLayout = new javax.swing.GroupLayout(ReturnPanel);
        ReturnPanel.setLayout(ReturnPanelLayout);
        ReturnPanelLayout.setHorizontalGroup(
            ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnPanelLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(ReturnEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(195, 195, 195)
                .addComponent(ReturnCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
            .addGroup(ReturnPanelLayout.createSequentialGroup()
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReturnPanelLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ReturnReturnDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReturnIssueDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ReturnPanelLayout.createSequentialGroup()
                                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ReturnStudentNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ReturnCopyCodeField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                    .addComponent(ReturnLibraryCardField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SearchButton))))
                    .addGroup(ReturnPanelLayout.createSequentialGroup()
                        .addGap(448, 448, 448)
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ReturnPanelLayout.setVerticalGroup(
            ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ReturnCopyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ReturnLibraryCardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnStudentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ReturnIssueDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ReturnReturnDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReturnEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(206, 206, 206))
        );

        Pane.addTab("tab5", ReturnPanel);

        getContentPane().add(Pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 1000, 600));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logopng.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 285, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        setVisible(false);
        new LoginWindow().setVisible(true);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void AddStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStudentButtonActionPerformed
        //new AddStudent().setVisible(true);
        Pane.setVisible(true);
        Pane.setSelectedIndex(0);
    }//GEN-LAST:event_AddStudentButtonActionPerformed

    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        String student_id;
        String name = NameField.getText();
        String address = AddressField.getText();
        String phone = PhoneNumberField.getText();
        int max;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select max(library_card_no) from mydb.student");
            if (rs.next())
            {
                if (LibraryCardField.getText().equals(""))
                {
                    max = rs.getInt(1);
                    ++max;
                    stmt.executeUpdate("insert into mydb.student (library_card_no, student_name, address, phone_number) values ("+max+",'"+name+"','"+address+"','"+phone+"')");
                    JOptionPane.showMessageDialog(null, "Студент успешно добавлен!");
                }
                else
                {
                    student_id = LibraryCardField.getText();
                    stmt.executeUpdate("insert into mydb.student values ("+student_id+",'"+name+"','"+address+"','"+phone+"')");
                    JOptionPane.showMessageDialog(null, "Студент успешно добавлен!");
                }
                LibraryCardField.setText(null);
                NameField.setText(null);
                AddressField.setText(null);
                PhoneNumberField.setText(null);
            } 
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Введённый номер билета уже существует!");
            Pane.setVisible(false);
        }
    }//GEN-LAST:event_EnterButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        Pane.setVisible(false);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void AddBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookButtonActionPerformed
        Pane.setVisible(true);
        Pane.setSelectedIndex(1);
    }//GEN-LAST:event_AddBookButtonActionPerformed

    private void StatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatisticsButtonActionPerformed
        Pane.setVisible(true);
        if (isAdmin.equals("1"))
        {
            AdminLabel.setVisible(false);
            EmployeeButton.setEnabled(true);
            EmployeeToggleButton.setEnabled(true);
        }
        else
        {
            AdminLabel.setVisible(true);
            EmployeeButton.setEnabled(false);
            EmployeeToggleButton.setEnabled(false);
        }
        Pane.setSelectedIndex(2);
    }//GEN-LAST:event_StatisticsButtonActionPerformed

    private void IssueBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookButtonActionPerformed
        Pane.setVisible(true);
        Pane.setSelectedIndex(3);
        Date date = new Date();
        IssueDateChooser.setDate(date);
    }//GEN-LAST:event_IssueBookButtonActionPerformed

    private void ReturnBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookButtonActionPerformed
        Pane.setVisible(true);
        Pane.setSelectedIndex(4);
    }//GEN-LAST:event_ReturnBookButtonActionPerformed

    private void AddBookCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookCancelButtonActionPerformed
        Pane.setVisible(false);
    }//GEN-LAST:event_AddBookCancelButtonActionPerformed

    private void AddBookEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookEnterButtonActionPerformed
        String bookID = CopyCodeField.getText();
        String ISBN = ISBNField.getText();
        String BookName = BookNameField.getText();
        String BBK = BBKField.getText();
        String PublishYear = PublishYearField.getText();
        int quantity = 0;
        //int copy_code_check = 0;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();     
            ResultSet rs = stmt.executeQuery("SELECT quantity FROM mydb.book WHERE ISBN = "+ISBN+"");
            while(rs.next())
                quantity = rs.getInt("quantity");
            rs = stmt.executeQuery("select copy_code from mydb.copy where copy_code = "+bookID+"");
            if (rs.next())
            {
                JOptionPane.showMessageDialog(null, "Данный код экземпляра уже существует!");
            }
            else
            {
                if (quantity == 0)
            {
                stmt.executeUpdate("insert into mydb.book (ISBN, book_name, bbk, publish_year, quantity) values ('"+ISBN+"','"+BookName+"','"+BBK+"','"+PublishYear+"','"+(quantity+1)+"')");
                stmt.executeUpdate("insert into mydb.copy (copy_code, BOOK_ISBN) values ('"+bookID+"','"+ISBN+"')");
            }
            else
            {
                stmt.executeUpdate("insert into mydb.copy (copy_code, BOOK_ISBN) values ('"+bookID+"','"+ISBN+"')");
                stmt.executeUpdate("update mydb.book set quantity = "+(quantity+1)+" where ISBN = '"+ISBN+"'");
            }
            JOptionPane.showMessageDialog(null, "Книга успешно добавлена!");
            if (!DeleteCheckBox.isSelected())
            { 
                ISBNField.setText(null);
                BookNameField.setText(null);
                BBKField.setText(null);
                PublishYearField.setText(null);
            }
            CopyCodeField.setText(null);
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Введены некорректные данные!");
        }
    }//GEN-LAST:event_AddBookEnterButtonActionPerformed

    private void IssueCancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueCancelButton1ActionPerformed
        Pane.setVisible(false);
        IssueCopyCodeField.setText(null);
        IssueLibraryCardField.setText(null);
        IssueDateChooser.setDate(null);
        ReturnDateChooser.setDate(null);
    }//GEN-LAST:event_IssueCancelButton1ActionPerformed

    private void IssueEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueEnterButtonActionPerformed
        SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
        String BookID = IssueCopyCodeField.getText();
        String StudentID = IssueLibraryCardField.getText();
        String IDate;
        String RDate;
        Date IssueDate = IssueDateChooser.getDate();
        Date ReturnDate = ReturnDateChooser.getDate();
        dFormat.applyPattern("yyyy-MM-dd");
        IDate = dFormat.format(IssueDate);
        RDate = dFormat.format(ReturnDate);
        int k = 0;
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.copy where copy_code ='"+BookID+"'");
            if(rs.next())
            {
                ResultSet rs1 = stmt.executeQuery("select * from mydb.student where library_card_no ='"+StudentID+"'");
                if (rs1.next())
                {
                    ResultSet rs3 = stmt.executeQuery("select * from mydb.issue_copy where COPY_copy_code = "+BookID+"");
                    if (rs3.next())
                    {
                        JOptionPane.showMessageDialog(null,"Данный экземпляр уже выдан!");
                    }
                    else
                    {
                        ResultSet rs2 = stmt.executeQuery("select MAX(issue_code) as issue_code from mydb.issue");
                        while (rs2.next())
                        k = rs2.getInt("issue_code");
                        ++k;
                        stmt.executeUpdate("insert into mydb.issue (issue_code, issue_date, return_date, STUDENT_library_card_no, EMPLOYEE_employee_id) values ('"+k+"','"+IDate+"','"+RDate+"','"+StudentID+"','"+1+"')");
                        stmt.executeUpdate("insert into mydb.issue_copy (COPY_copy_code, ISSUE_issue_code) values ('"+BookID+"','"+k+"')");
                        JOptionPane.showMessageDialog(null,"Книга выдана успешно!");
                        IssueCopyCodeField.setText(null);
                        IssueLibraryCardField.setText(null);
                        IssueDateChooser.setDate(null);
                        ReturnDateChooser.setDate(null);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Такого кода билета не существует!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такого кода экземпляра не существует!");
            }
        }
        catch (Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_IssueEnterButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String BookID = ReturnCopyCodeField.getText();
        String IssueID;
        
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.issue_copy where COPY_copy_code = '"+BookID+"'");
            if (rs.next())
            {
            IssueID = rs.getString("ISSUE_issue_code");
            ResultSet rs1 = stmt.executeQuery("select * from mydb.issue where issue_code = '"+IssueID+"'");
            if (rs1.next())
            {
                ReturnLibraryCardField.setText(rs1.getString("STUDENT_library_card_no"));
                ReturnIssueDateField.setText(rs1.getString("issue_date"));
                ReturnReturnDateField.setText(rs1.getString("return_date"));
                ResultSet rs2 = stmt.executeQuery("select student_name from mydb.student where library_card_no = '"+rs1.getString("STUDENT_library_card_no")+"'");
                if (rs2.next())
                {
                    ReturnStudentNameField.setText(rs2.getString("student_name"));
                }
            }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Данный экземпляр не был выдан ранее!");
            }
        }
        catch (Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void ReturnCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnCancelButtonActionPerformed
        Pane.setVisible(false);
        ReturnCopyCodeField.setText(null);
        ReturnLibraryCardField.setText(null);
        ReturnIssueDateField.setText(null);
        ReturnReturnDateField.setText(null);
    }//GEN-LAST:event_ReturnCancelButtonActionPerformed

    private void ReturnEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnEnterButtonActionPerformed
        String BookID = ReturnCopyCodeField.getText();
        String IssueID;
        
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select ISSUE_issue_code from mydb.issue_copy where COPY_copy_code = "+BookID+" ");
            if (rs.next())
            {
                IssueID = rs.getString("ISSUE_issue_code");
                stmt.executeUpdate("delete from mydb.issue_copy where ISSUE_issue_code = "+IssueID+"");
                stmt.executeUpdate("delete from mydb.issue where issue_code = "+IssueID+"");
                JOptionPane.showMessageDialog(null, "Книга успешно возвращена!");
                ReturnCopyCodeField.setText(null);
                ReturnLibraryCardField.setText(null);
                ReturnIssueDateField.setText(null);
                ReturnReturnDateField.setText(null);
                ReturnStudentNameField.setText(null);
            }
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }//GEN-LAST:event_ReturnEnterButtonActionPerformed

    private void IssueToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueToggleButtonActionPerformed
        if (IssueToggleButton.isSelected())
        {
            try 
            {
                EmployeeToggleButton.setSelected(false);
                BookToggleButton.setSelected(false);
                StudentToggleButton.setSelected(false);
                CopyToggleButton.setSelected(false);
                java.sql.Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT copy_code 'Код экземпляра', library_card_no 'Код билета', student_name 'Ф.И.О.', book_name 'Название книги', issue_date 'Дата выдачаи', return_date 'Дата планируемого возврата' FROM mydb.issue" +
                                                " JOIN mydb.student ON student.library_card_no = issue.STUDENT_library_card_no" +
                                                " JOIN mydb.issue_copy ON issue_copy.ISSUE_issue_code = issue.issue_code" +
                                                " JOIN mydb.copy ON copy.copy_code = issue_copy.COPY_copy_code" +
                                                " JOIN mydb.book ON book.ISBN = copy.BOOK_ISBN;");
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e)
            {
            System.err.println(e);
            }
        }
        else
        {
            jTable1.setModel(new DefaultTableModel());
        }
        
    }//GEN-LAST:event_IssueToggleButtonActionPerformed

    private void CopyToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyToggleButtonActionPerformed
        if (CopyToggleButton.isSelected())
        {
            try 
            {
                EmployeeToggleButton.setSelected(false);
                BookToggleButton.setSelected(false);
                StudentToggleButton.setSelected(false);
                IssueToggleButton.setSelected(false);
                java.sql.Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                //ResultSet rs = stmt.executeQuery("SELECT ISBN AS 'ISBN', book_name AS 'Название книги', bbk AS 'Код ББК', publish_year AS 'Год издания', quantity AS 'Кол-во копий' FROM mydb.book;");
                ResultSet rs = stmt.executeQuery("SELECT copy_code AS 'Код копии', ISBN AS 'ISBN', book_name AS 'Название книги', publish_year AS 'Год издания' FROM mydb.copy" +
                                                " JOIN mydb.book ON book.ISBN = copy.BOOK_ISBN;");
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
        else
        {
            jTable1.setModel(new DefaultTableModel());
        }
    }//GEN-LAST:event_CopyToggleButtonActionPerformed

    private void StudentToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentToggleButtonActionPerformed
        if (StudentToggleButton.isSelected())
        {
            try 
            {   
                EmployeeToggleButton.setSelected(false);
                BookToggleButton.setSelected(false);
                IssueToggleButton.setSelected(false);
                CopyToggleButton.setSelected(false);
                java.sql.Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT library_card_no AS 'Номер билета', student_name AS 'Ф.И.О.', address AS 'Адрес', phone_number AS 'Номер телефона' FROM mydb.student order by student_name;");
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
        else
        {
            jTable1.setModel(new DefaultTableModel());
        }
    }//GEN-LAST:event_StudentToggleButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (StudentToggleButton.isSelected())
        {
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String student_id = df.getValueAt(selectedIndex, 0).toString();
            String name = df.getValueAt(selectedIndex, 1).toString();
            String address = df.getValueAt(selectedIndex, 2).toString();
            String phone = df.getValueAt(selectedIndex, 3).toString();
        
            new EditStudentFrame(this, student_id, name, address, phone).setVisible(true);
        }
        
        if (CopyToggleButton.isSelected())
        {
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String copy = df.getValueAt(selectedIndex, 0).toString();
            String ISBN = df.getValueAt(selectedIndex, 1).toString();
            String name = df.getValueAt(selectedIndex, 2).toString();
            String year = df.getValueAt(selectedIndex, 3).toString();
        
            new EditBookFrame(this, copy, ISBN, name, year).setVisible(true);
        }
        
        if (IssueToggleButton.isSelected())
        {
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String copyid = df.getValueAt(selectedIndex, 0).toString();
            String student_id = df.getValueAt(selectedIndex, 1).toString();
            String st_name = df.getValueAt(selectedIndex, 2).toString();
            String book_name = df.getValueAt(selectedIndex, 3).toString();
            String date1 = df.getValueAt(selectedIndex, 4).toString();
            String date2 = df.getValueAt(selectedIndex, 5).toString();
            
            new EditIssueFrame(this, copyid, student_id, st_name, book_name, date1, date2).setVisible(true);
        }
        if (BookToggleButton.isSelected())
        {
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String ISBN = df.getValueAt(selectedIndex, 0).toString();
            String name = df.getValueAt(selectedIndex, 1).toString();
            String bbk = df.getValueAt(selectedIndex, 2).toString();
            String year = df.getValueAt(selectedIndex, 3).toString();
            String quantity = df.getValueAt(selectedIndex, 4).toString();
            
            new EditBooksFrame(this, ISBN, name, bbk, year, quantity).setVisible(true);
        }
        if (EmployeeToggleButton.isSelected())
        {
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String ID = df.getValueAt(selectedIndex, 0).toString();
            String login = df.getValueAt(selectedIndex, 1).toString();
            String name = df.getValueAt(selectedIndex, 2).toString();
            String admin = df.getValueAt(selectedIndex, 3).toString();
            
            new EditEmployeeFrame(this, ID, login, name, admin).setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void BookToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookToggleButtonActionPerformed
        if (BookToggleButton.isSelected())
        {
            try 
            {   
                EmployeeToggleButton.setSelected(false);
                StudentToggleButton.setSelected(false);
                IssueToggleButton.setSelected(false);
                CopyToggleButton.setSelected(false);
                java.sql.Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT ISBN AS 'ISBN', book_name AS 'Название книги', bbk AS 'Код ББК', publish_year AS 'Год издания', quantity AS 'Количество' FROM mydb.book");
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
        else
        {
            jTable1.setModel(new DefaultTableModel());
        }
    }//GEN-LAST:event_BookToggleButtonActionPerformed

    private void SearchISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchISBNActionPerformed
        String ISBN = ISBNField.getText();
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from mydb.book where ISBN = '"+ISBN+"'");
            if (rs.next())
            {
                BookNameField.setText(rs.getString("book_name"));
                BBKField.setText(rs.getString("bbk"));
                PublishYearField.setText(rs.getString("publish_year"));
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Такой книги не существует!");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Что-то пошло не так!");
            setVisible(false);
        }
    }//GEN-LAST:event_SearchISBNActionPerformed

    private void EmployeeToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeToggleButtonActionPerformed
        if (EmployeeToggleButton.isSelected())
        {
            try 
            {   
                StudentToggleButton.setSelected(false);
                IssueToggleButton.setSelected(false);
                CopyToggleButton.setSelected(false);
                BookToggleButton.setSelected(false);
                java.sql.Connection con = ConnectionProvider.getCon();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT employee_id AS 'ID', login AS 'Логин', name AS 'Ф.И.О.', admin AS 'Админ' FROM mydb.employee");
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
        else
        {
            jTable1.setModel(new DefaultTableModel());
        }
       
        
    }//GEN-LAST:event_EmployeeToggleButtonActionPerformed

    private void EmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeButtonActionPerformed
        new AddEmployeeFrame(this).setVisible(true);
    }//GEN-LAST:event_EmployeeButtonActionPerformed
    
    public void RefreshStudent()
    {
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT library_card_no AS 'Номер билета', student_name AS 'Ф.И.О.', address AS 'Адрес', phone_number AS 'Номер телефона' FROM mydb.student order by student_name;");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
                
    }
    
    public void RefreshIssue()
    {
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT copy_code 'Код экземпляра', library_card_no 'Код билета', student_name 'Ф.И.О.', book_name 'Название книги', issue_date 'Дата выдачаи', return_date 'Дата планируемого возврата' FROM mydb.issue" +
                                                " JOIN mydb.student ON student.library_card_no = issue.STUDENT_library_card_no" +
                                                " JOIN mydb.issue_copy ON issue_copy.ISSUE_issue_code = issue.issue_code" +
                                                " JOIN mydb.copy ON copy.copy_code = issue_copy.COPY_copy_code" +
                                                " JOIN mydb.book ON book.ISBN = copy.BOOK_ISBN;");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }
    
    public void RefreshCopy()
    {
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT copy_code AS 'Код копии', ISBN AS 'ISBN', book_name AS 'Название книги', bbk AS 'Код ББК', publish_year AS 'Год издания' FROM mydb.copy" +
                                                " JOIN mydb.book ON book.ISBN = copy.BOOK_ISBN;");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
        
        
    }
    
    public void RefreshBooks()
    {
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT ISBN AS 'ISBN', book_name AS 'Название книги', bbk AS 'Код ББК', publish_year AS 'Год издания', quantity AS 'Количество' FROM mydb.book");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.err.println(e);
        }          
    }
    
    public void RefreshEmployee()
    {
        try
        {
            java.sql.Connection con = ConnectionProvider.getCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT employee_id AS 'ID', login AS 'Логин', name AS 'Ф.И.О.', admin AS 'Админ' FROM mydb.employee");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            EmployeeToggleButton.setSelected(true);
        }
        catch(Exception e)
        {
            System.err.println(e);
        }          
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBookButton;
    private javax.swing.JButton AddBookCancelButton;
    private javax.swing.JButton AddBookEnterButton;
    private javax.swing.JPanel AddBookPanel;
    private javax.swing.JButton AddStudentButton;
    private javax.swing.JPanel AddStudentPanel;
    private javax.swing.JTextField AddressField;
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JLabel AdminLabel;
    private javax.swing.JTextField BBKField;
    private javax.swing.JLabel BBKLabel;
    private javax.swing.JTextField BookNameField;
    private javax.swing.JLabel BookNameLabel;
    private javax.swing.JToggleButton BookToggleButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTextField CopyCodeField;
    private javax.swing.JLabel CopyCodeLabel;
    private javax.swing.JToggleButton CopyToggleButton;
    private javax.swing.JCheckBox DeleteCheckBox;
    private javax.swing.JButton EmployeeButton;
    private javax.swing.JToggleButton EmployeeToggleButton;
    private javax.swing.JButton EnterButton;
    private javax.swing.JTextField ISBNField;
    private javax.swing.JLabel ISBNLabel;
    private javax.swing.JButton IssueBookButton;
    private javax.swing.JButton IssueCancelButton1;
    private javax.swing.JTextField IssueCopyCodeField;
    private com.toedter.calendar.JDateChooser IssueDateChooser;
    private javax.swing.JButton IssueEnterButton;
    private javax.swing.JTextField IssueLibraryCardField;
    private javax.swing.JPanel IssuePanel;
    private javax.swing.JToggleButton IssueToggleButton;
    private javax.swing.JLabel LibrariCardLabel;
    private javax.swing.JTextField LibraryCardField;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTabbedPane Pane;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneNumberField;
    private javax.swing.JTextField PublishYearField;
    private javax.swing.JButton ReturnBookButton;
    private javax.swing.JButton ReturnCancelButton;
    private javax.swing.JTextField ReturnCopyCodeField;
    private com.toedter.calendar.JDateChooser ReturnDateChooser;
    private javax.swing.JButton ReturnEnterButton;
    private javax.swing.JTextField ReturnIssueDateField;
    private javax.swing.JTextField ReturnLibraryCardField;
    private javax.swing.JPanel ReturnPanel;
    private javax.swing.JTextField ReturnReturnDateField;
    private javax.swing.JTextField ReturnStudentNameField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SearchISBN;
    private javax.swing.JButton StatisticsButton;
    private javax.swing.JPanel StatisticsPanel;
    private javax.swing.JToggleButton StudentToggleButton;
    private javax.swing.JLabel YearLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
